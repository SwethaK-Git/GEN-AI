# -*- coding: utf-8 -*-
"""Number sequence RNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z1TYMpXPUpHbt7_GjARu5LoI89hDvz8I
"""

import numpy as np
from tensorflow.keras.layers import SimpleRNN,Dense
from tensorflow.keras.models import Sequential
import matplotlib.pyplot as plt

sequence=np.array([i for i in range(1,101)])
window_size=3
x=[]
y=[]
for i in range(len(sequence)-window_size):
    x.append(sequence[i:i+window_size])
    y.append(sequence[i+window_size])
x=np.array(x)
y=np.array(y)

X=x.reshape(x.shape[0],x.shape[1],1)

model=Sequential()
model.add(SimpleRNN(50,activation='relu',input_shape=(window_size,1)))
model.add(Dense(1))
model.compile(optimizer='adam',loss='mse')
model.fit(X,y,epochs=500,verbose=0)
print("Training complete")

import pickle

with open('/content/drive/MyDrive/GENAI/rnn_model.pkl', 'wb') as file:
    pickle.dump(model,file)

with open('/content/drive/MyDrive/GENAI/rnn_model.pkl','rb') as f:
    loaded_model = pickle.load(f)

# Define your input sequence here (e.g., [11, 12, 13])
my_input = np.array([11, 12, 13])

# Reshape the input to match the model's expected input shape
my_input = my_input.reshape((1, window_size, 1))

# Get the prediction from the loaded model
my_prediction = loaded_model.predict(my_input)

# Print the prediction
print(f"Input: {my_input.flatten()}")
print(f"Predicted output: {my_prediction[0][0]}")

predictions=model.predict(X)
plt.plot(y,label='True value')
plt.plot(predictions,label='Predicted value')
plt.legend()
plt.title('True value vs Predicted value')
plt.show()